AWSTemplateFormatVersion: 2010-09-09
Description: Create EC2 instance for basic HTTP server
Parameters:
  KeyName:
    Description: EC2 keypair
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceName:
    Description: Name of instance
    Type: String
    Default: http 
  NodeSourceRepo:
    Description: Nodesource RPM location
    Type: String
    Default: https://rpm.nodesource.com/setup_16.x  
Mappings:
  AWSRegionAMIEC2:
    ap-southeast-1:
      AmazonLinux: ami-0ba35dc9caf73d1c7
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          InstallAndRun:
            - Install
            - NpmInstall
            - StartServer
        Install:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub | 
                [main]
                stack='${AWS::StackId}'
                region='${AWS::Region}'
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v \
                --stack '${AWS::StackName}' \
                --resource WebServerInstance \
                --configsets InstallAndRun \
                --region '${AWS::Region}'
                runas=root
              mode: '000400'
              owner: root
              group: root
            /home/ec2-user/app.js:
              content: |
                  const express = require("express")
                  const bodyParser = require('body-parser')

                  require('console-stamp')(console, '[HH:MM:ss.l]');

                  const app = express()
                  const jsonParser = bodyParser.json()

                  module.exports = app

                  app.get("/", (req, res) => {
                    console.log("Got GET")
                    res.json({"result": "GET"})
                  })

                  app.post("/", jsonParser, (req, res) => {
                    console.log("Got POST")
                    res.json({"result": "POST"})
                  })
              mode: '000400'
              owner: ec2-user
              group: ec2-user
            /home/ec2-user/server.js:
              content: |
                  const app = require("./app")
                  const port = 80
                  app.listen(port, () => console.log(`The server is listening}`))
              mode: '000400'
              owner: ec2-user
              group: ec2-user
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        NpmInstall:
          commands:
            npm_packages:
              command: npm install -y -g express body-parser console-stamp forever
        StartServer:
           commands:
            forever_start:
              command: forever start /home/ec2-user/server.js        
    Properties:
      ImageId: !FindInMap 
        - AWSRegionAMIEC2
        - !Ref 'AWS::Region'
        - AmazonLinux
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      Tags: 
        - Key: "Name"
          Value: !Ref InstanceName
      UserData: !Base64 
        Fn::Sub: |
          #!/bin/bash

          yum update -y
          yum update -y aws-cfn-bootstrap 

          curl -sL '${NodeSourceRepo}' | sudo bash -
          yum install -y nodejs

          /opt/aws/bin/cfn-init -v \
            --stack '${AWS::StackName}' \
            --resource WebServerInstance \
            --configsets InstallAndRun \
            --region '${AWS::Region}'
          
          /opt/aws/bin/cfn-signal -e $? \
            --stack  '${AWS::StackName}' \
            --resource WebServerInstance \
            --region '${AWS::Region}'
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
Outputs:
  DNS:
    Description: DNS name
    Value: !GetAtt 
      - WebServerInstance
      - PublicDnsName
